import 'package:flutter/material.dart';

import 'advanced_image_preview.dart';

/// 支持全屏图片预览的包装组件
class FullScreenImagePreview extends StatefulWidget {
  /// 图片路径列表
  final List<String> imagePaths;

  /// 初始选中的图片索引
  final int initialIndex;

  /// 图片索引变化回调
  final Function(int)? onIndexChanged;

  /// 是否显示底部缩略图
  final bool showThumbnails;

  /// 是否启用缩放
  final bool enableZoom;

  /// 容器装饰
  final BoxDecoration? previewDecoration;

  /// 内边距
  final EdgeInsets? padding;

  const FullScreenImagePreview({
    super.key,
    required this.imagePaths,
    this.initialIndex = 0,
    this.onIndexChanged,
    this.showThumbnails = true,
    this.enableZoom = true,
    this.previewDecoration,
    this.padding,
  });

  @override
  State<FullScreenImagePreview> createState() => _FullScreenImagePreviewState();
}

class _FullScreenImagePreviewState extends State<FullScreenImagePreview> {
  bool _isFullScreen = false;
  late int _currentIndex;
  final GlobalKey<ScaffoldState> _scaffoldKey = GlobalKey<ScaffoldState>();

  @override
  void initState() {
    super.initState();
    _currentIndex = widget.initialIndex;
  }

  @override
  Widget build(BuildContext context) {
    // 在全屏模式下创建Overlay
    if (_isFullScreen) {
      return Material(
        color: Colors.transparent,
        child: WillPopScope(
          onWillPop: () async {
            _exitFullScreen();
            return false;
          },
          child: Scaffold(
            key: _scaffoldKey,
            backgroundColor: Colors.black,
            body: Stack(
              fit: StackFit.expand,
              children: [
                // 全屏图片预览
                Positioned.fill(
                  child: AdvancedImagePreview(
                    imagePaths: widget.imagePaths,
                    initialIndex: _currentIndex,
                    onIndexChanged: _handleIndexChanged,
                    showThumbnails: widget.showThumbnails,
                    enableZoom: widget.enableZoom,
                    isFullScreen: true,
                    onFullScreenChanged: (isFullScreen) {
                      if (!isFullScreen) {
                        _exitFullScreen();
                      }
                    },
                    previewDecoration: const BoxDecoration(
                      color: Colors.black,
                    ),
                  ),
                ),
                
                // 关闭按钮
                Positioned(
                  top: 32,
                  right: 16,
                  child: Material(
                    color: Colors.black45,
                    shape: const CircleBorder(),
                    child: IconButton(
                      icon: const Icon(Icons.close),
                      color: Colors.white,
                      onPressed: _exitFullScreen,
                      tooltip: '退出全屏',
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      );
    }
    
    // 非全屏模式
    return AdvancedImagePreview(
      imagePaths: widget.imagePaths,
      initialIndex: _currentIndex,
      onIndexChanged: _handleIndexChanged,
      showThumbnails: widget.showThumbnails,
      enableZoom: widget.enableZoom,
      isFullScreen: false,
      onFullScreenChanged: (isFullScreen) {
        if (isFullScreen) {
          _enterFullScreen();
        }
      },
      previewDecoration: widget.previewDecoration,
      padding: widget.padding,
    );
  }

  void _enterFullScreen() {
    setState(() {
      _isFullScreen = true;
    });
  }

  void _exitFullScreen() {
    setState(() {
      _isFullScreen = false;
    });
  }

  void _handleIndexChanged(int index) {
    setState(() {
      _currentIndex = index;
    });
    widget.onIndexChanged?.call(index);
  }
}
